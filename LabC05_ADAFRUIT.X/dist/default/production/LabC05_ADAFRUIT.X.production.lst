

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 11 14:07:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216                           
   217                           	psect	strings
   218     0251                     __pstrings:
   219     0251                     stringtab:
   220     0251                     __stringtab:
   221     0251                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224     0251                     stringdir:
   225     0251  3002               	movlw	high stringdir
   226     0252  008A               	movwf	10
   227     0253  0804               	movf	4,w
   228     0254  0A84               	incf	4,f
   229     0255  0782               	addwf	2,f
   230     0256                     __stringbase:
   231     0256  3400               	retlw	0
   232     0257                     __end_of__stringtab:
   233     0257                     _dpowers:
   234     0257  3401               	retlw	1
   235     0258  3400               	retlw	0
   236     0259  340A               	retlw	10
   237     025A  3400               	retlw	0
   238     025B  3464               	retlw	100
   239     025C  3400               	retlw	0
   240     025D  34E8               	retlw	232
   241     025E  3403               	retlw	3
   242     025F  3410               	retlw	16
   243     0260  3427               	retlw	39
   244     0261                     __end_of_dpowers:
   245     001A                     _RCREG	set	26
   246     0019                     _TXREG	set	25
   247     0018                     _RCSTAbits	set	24
   248     001F                     _ADCON0bits	set	31
   249     0009                     _PORTE	set	9
   250     0006                     _PORTB	set	6
   251     0008                     _PORTD	set	8
   252     0005                     _PORTA	set	5
   253     0006                     _PORTBbits	set	6
   254     000B                     _INTCONbits	set	11
   255     000C                     _PIR1bits	set	12
   256     0064                     _TXIF	set	100
   257     00C7                     _SPEN	set	199
   258     00C4                     _CREN	set	196
   259     008C                     _PIE1bits	set	140
   260     0098                     _TXSTAbits	set	152
   261     009A                     _SPBRGH	set	154
   262     0099                     _SPBRG	set	153
   263     009F                     _ADCON1bits	set	159
   264     008F                     _OSCCON	set	143
   265     0096                     _IOCB	set	150
   266     0081                     _OPTION_REGbits	set	129
   267     0089                     _TRISE	set	137
   268     0088                     _TRISD	set	136
   269     0085                     _TRISA	set	133
   270     0086                     _TRISB	set	134
   271     04C5                     _TXEN	set	1221
   272     04C4                     _SYNC	set	1220
   273     04C2                     _BRGH	set	1218
   274     0189                     _ANSELH	set	393
   275     0188                     _ANSEL	set	392
   276     0C3B                     _BRG16	set	3131
   277     0261                     STR_2:
   278     0261  3445               	retlw	69	;'E'
   279     0262  346C               	retlw	108	;'l'
   280     0263  3420               	retlw	32	;' '
   281     0264  3476               	retlw	118	;'v'
   282     0265  3461               	retlw	97	;'a'
   283     0266  346C               	retlw	108	;'l'
   284     0267  346F               	retlw	111	;'o'
   285     0268  3472               	retlw	114	;'r'
   286     0269  3420               	retlw	32	;' '
   287     026A  3464               	retlw	100	;'d'
   288     026B  3465               	retlw	101	;'e'
   289     026C  346C               	retlw	108	;'l'
   290     026D  3420               	retlw	32	;' '
   291     026E  3470               	retlw	112	;'p'
   292     026F  3475               	retlw	117	;'u'
   293     0270  3465               	retlw	101	;'e'
   294     0271  3472               	retlw	114	;'r'
   295     0272  3474               	retlw	116	;'t'
   296     0273  346F               	retlw	111	;'o'
   297     0274  3420               	retlw	32	;' '
   298     0275  3425               	retlw	37	;'%'
   299     0276  3463               	retlw	99	;'c'
   300     0277  3420               	retlw	32	;' '
   301     0278  3465               	retlw	101	;'e'
   302     0279  3473               	retlw	115	;'s'
   303     027A  343A               	retlw	58	;':'
   304     027B  3400               	retlw	0
   305     027C                     STR_1:
   306     027C  3425               	retlw	37	;'%'
   307     027D  3464               	retlw	100	;'d'
   308     027E  340D               	retlw	13
   309     027F  3400               	retlw	0
   310                           
   311                           	psect	cinit
   312     0015                     start_initialization:	
   313                           ; #config settings
   314                           
   315     0015                     __initialization:
   316                           
   317                           ; Clear objects allocated to BANK0
   318     0015  1283               	bcf	3,5	;RP0=0, select bank0
   319     0016  1303               	bcf	3,6	;RP1=0, select bank0
   320     0017  01E1               	clrf	__pbssBANK0& (0+127)
   321     0018  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   322     0019  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   323     001A  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   324     001B                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327     001B                     __end_of__initialization:
   328     001B  0183               	clrf	3
   329     001C  120A  118A  2AC9   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK0
   332     0061                     __pbssBANK0:
   333     0061                     _recibido:
   334     0061                     	ds	2
   335     0063                     _contador:
   336     0063                     	ds	2
   337                           
   338                           	psect	cstackBANK1
   339     00A0                     __pcstackBANK1:
   340     00A0                     ??_setup:
   341     00A0                     ??_initUART:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346     00A0                     	ds	2
   347     00A2                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x2
   350     00A2                     	ds	3
   351                           
   352                           	psect	cstackCOMMON
   353     0070                     __pcstackCOMMON:
   354     0070                     ?_TXT:
   355     0070                     ??_TXT:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_setup:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ?_initUART:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_isr:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_cadena:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ??_cadena:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?___lwdiv:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ___lwdiv@divisor:	
   380                           ; 2 bytes @ 0x0
   381                           
   382                           
   383                           ; 2 bytes @ 0x0
   384     0070                     	ds	1
   385     0071                     TXT@caracter:
   386     0071                     cadena@i:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 2 bytes @ 0x1
   391     0071                     	ds	1
   392     0072                     ___lwdiv@dividend:
   393                           
   394                           ; 2 bytes @ 0x2
   395     0072                     	ds	1
   396     0073                     cadena@txt:
   397                           
   398                           ; 1 bytes @ 0x3
   399     0073                     	ds	1
   400     0074                     ??___lwdiv:
   401                           
   402                           ; 1 bytes @ 0x4
   403     0074                     	ds	1
   404     0075                     ___lwdiv@quotient:
   405                           
   406                           ; 2 bytes @ 0x5
   407     0075                     	ds	2
   408     0077                     ___lwdiv@counter:
   409                           
   410                           ; 1 bytes @ 0x7
   411     0077                     	ds	1
   412     0078                     ?___lwmod:
   413     0078                     ___lwmod@divisor:	
   414                           ; 2 bytes @ 0x8
   415                           
   416                           
   417                           ; 2 bytes @ 0x8
   418     0078                     	ds	2
   419     007A                     ___lwmod@dividend:
   420                           
   421                           ; 2 bytes @ 0xA
   422     007A                     	ds	2
   423     007C                     ??___lwmod:
   424                           
   425                           ; 1 bytes @ 0xC
   426     007C                     	ds	1
   427     007D                     ___lwmod@counter:
   428                           
   429                           ; 1 bytes @ 0xD
   430     007D                     	ds	1
   431                           
   432                           	psect	cstackBANK0
   433     0020                     __pcstackBANK0:
   434     0020                     ?_sprintf:
   435     0020                     sprintf@f:	
   436                           ; 2 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440     0020                     	ds	3
   441     0023                     ??_sprintf:
   442                           
   443                           ; 1 bytes @ 0x3
   444     0023                     	ds	3
   445     0026                     sprintf@flag:
   446                           
   447                           ; 1 bytes @ 0x6
   448     0026                     	ds	1
   449     0027                     sprintf@prec:
   450                           
   451                           ; 1 bytes @ 0x7
   452     0027                     	ds	1
   453     0028                     sprintf@ap:
   454                           
   455                           ; 1 bytes @ 0x8
   456     0028                     	ds	1
   457     0029                     sprintf@val:
   458                           
   459                           ; 2 bytes @ 0x9
   460     0029                     	ds	2
   461     002B                     sprintf@sp:
   462                           
   463                           ; 1 bytes @ 0xB
   464     002B                     	ds	1
   465     002C                     sprintf@c:
   466                           
   467                           ; 1 bytes @ 0xC
   468     002C                     	ds	1
   469     002D                     ?_POT:
   470     002D                     POT@puerto:	
   471                           ; 1 bytes @ 0xD
   472                           
   473                           
   474                           ; 1 bytes @ 0xD
   475     002D                     	ds	1
   476     002E                     ??_POT:
   477                           
   478                           ; 1 bytes @ 0xE
   479     002E                     	ds	2
   480     0030                     POT@oracion:
   481                           
   482                           ; 40 bytes @ 0x10
   483     0030                     	ds	40
   484     0058                     POT@CVPOT:
   485                           
   486                           ; 4 bytes @ 0x38
   487     0058                     	ds	4
   488     005C                     POT@contador:
   489                           
   490                           ; 1 bytes @ 0x3C
   491     005C                     	ds	1
   492     005D                     ??_isr:
   493                           
   494                           ; 1 bytes @ 0x3D
   495     005D                     	ds	4
   496                           
   497                           	psect	maintext
   498     02C9                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 86 in file "PreLabC05_UART.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       3       0       0
   521 ;;      Totals:         0       0       3       0       0
   522 ;;Total ram usage:        3 bytes
   523 ;; Hardware stack levels required when called: 5
   524 ;; This function calls:
   525 ;;		_initUART
   526 ;;		_setup
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532     02C9                     _main:	
   533                           ;psect for function _main
   534                           
   535     02C9                     l1245:	
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;PreLabC05_UART.c: 87:     setup();
   541     02C9  120A  118A  21A5  120A  118A  	fcall	_setup
   542                           
   543                           ;PreLabC05_UART.c: 88:     initUART();
   544     02CE  120A  118A  2280  120A  118A  	fcall	_initUART
   545     02D3                     l100:
   546     02D3  1283               	bcf	3,5	;RP0=0, select bank0
   547     02D4  1303               	bcf	3,6	;RP1=0, select bank0
   548     02D5  1E8C               	btfss	12,5	;volatile
   549     02D6  2AD8               	goto	u641
   550     02D7  2AD9               	goto	u640
   551     02D8                     u641:
   552     02D8  2AD3               	goto	l100
   553     02D9                     u640:
   554     02D9                     l1247:
   555                           
   556                           ;PreLabC05_UART.c: 93:         _delay((unsigned long)((500)*(8000000/4000.0)));
   557     02D9  3006               	movlw	6
   558     02DA  1683               	bsf	3,5	;RP0=1, select bank1
   559     02DB  1303               	bcf	3,6	;RP1=0, select bank1
   560     02DC  00A4               	movwf	(??_main^(0+128)+2)
   561     02DD  3013               	movlw	19
   562     02DE  00A3               	movwf	(??_main^(0+128)+1)
   563     02DF  30AD               	movlw	173
   564     02E0  00A2               	movwf	??_main^(0+128)
   565     02E1                     u657:
   566     02E1  0BA2               	decfsz	??_main^(0+128),f
   567     02E2  2AE1               	goto	u657
   568     02E3  0BA3               	decfsz	(??_main^(0+128)+1),f
   569     02E4  2AE1               	goto	u657
   570     02E5  0BA4               	decfsz	(??_main^(0+128)+2),f
   571     02E6  2AE1               	goto	u657
   572     02E7  2AD3               	goto	l100
   573     02E8  120A  118A  2812   	ljmp	start
   574     02EB                     __end_of_main:
   575                           
   576                           	psect	text1
   577     01A5                     __ptext1:	
   578 ;; *************** function _setup *****************
   579 ;; Defined at:
   580 ;;		line 101 in file "PreLabC05_UART.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       2       0       0
   597 ;;      Totals:         0       0       2       0       0
   598 ;;Total ram usage:        2 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 4
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     01A5                     _setup:	
   609                           ;psect for function _setup
   610                           
   611     01A5                     l1157:	
   612                           ;incstack = 0
   613                           ; Regs used in _setup: [wreg+status,2+status,0]
   614                           
   615                           
   616                           ;PreLabC05_UART.c: 103:     ANSEL = 0;
   617     01A5  1683               	bsf	3,5	;RP0=1, select bank3
   618     01A6  1703               	bsf	3,6	;RP1=1, select bank3
   619     01A7  0188               	clrf	8	;volatile
   620                           
   621                           ;PreLabC05_UART.c: 104:     ANSELH = 0;
   622     01A8  0189               	clrf	9	;volatile
   623     01A9                     l1159:
   624                           
   625                           ;PreLabC05_UART.c: 107:     TRISB = 0x0f;
   626     01A9  300F               	movlw	15
   627     01AA  1683               	bsf	3,5	;RP0=1, select bank1
   628     01AB  1303               	bcf	3,6	;RP1=0, select bank1
   629     01AC  0086               	movwf	6	;volatile
   630     01AD                     l1161:
   631                           
   632                           ;PreLabC05_UART.c: 110:     TRISA = 0;
   633     01AD  0185               	clrf	5	;volatile
   634     01AE                     l1163:
   635                           
   636                           ;PreLabC05_UART.c: 111:     TRISD = 0;
   637     01AE  0188               	clrf	8	;volatile
   638     01AF                     l1165:
   639                           
   640                           ;PreLabC05_UART.c: 112:     TRISE = 0;
   641     01AF  0189               	clrf	9	;volatile
   642     01B0                     l1167:
   643                           
   644                           ;PreLabC05_UART.c: 115:     PORTA = 0;
   645     01B0  1283               	bcf	3,5	;RP0=0, select bank0
   646     01B1  1303               	bcf	3,6	;RP1=0, select bank0
   647     01B2  0185               	clrf	5	;volatile
   648     01B3                     l1169:
   649                           
   650                           ;PreLabC05_UART.c: 116:     PORTB = 0;
   651     01B3  0186               	clrf	6	;volatile
   652     01B4                     l1171:
   653                           
   654                           ;PreLabC05_UART.c: 117:     PORTD = 0;
   655     01B4  0188               	clrf	8	;volatile
   656     01B5                     l1173:
   657                           
   658                           ;PreLabC05_UART.c: 118:     PORTE = 0;
   659     01B5  0189               	clrf	9	;volatile
   660     01B6                     l1175:
   661                           
   662                           ;PreLabC05_UART.c: 120:     OPTION_REGbits.nRBPU = 0;
   663     01B6  1683               	bsf	3,5	;RP0=1, select bank1
   664     01B7  1303               	bcf	3,6	;RP1=0, select bank1
   665     01B8  1381               	bcf	1,7	;volatile
   666                           
   667                           ;PreLabC05_UART.c: 121:     IOCB = 0b01111111;
   668     01B9  307F               	movlw	127
   669     01BA  0096               	movwf	22	;volatile
   670                           
   671                           ;PreLabC05_UART.c: 124:     OSCCON = 0X75;
   672     01BB  3075               	movlw	117
   673     01BC  008F               	movwf	15	;volatile
   674     01BD                     l1177:
   675                           
   676                           ;PreLabC05_UART.c: 127:     INTCONbits.RBIF = 0;
   677     01BD  100B               	bcf	11,0	;volatile
   678     01BE                     l1179:
   679                           
   680                           ;PreLabC05_UART.c: 128:     INTCONbits.RBIE = 1;
   681     01BE  158B               	bsf	11,3	;volatile
   682     01BF                     l1181:
   683                           
   684                           ;PreLabC05_UART.c: 129:     INTCONbits.PEIE = 1;
   685     01BF  170B               	bsf	11,6	;volatile
   686     01C0                     l1183:
   687                           
   688                           ;PreLabC05_UART.c: 130:     INTCONbits.GIE = 1;
   689     01C0  178B               	bsf	11,7	;volatile
   690     01C1                     l1185:
   691                           
   692                           ;PreLabC05_UART.c: 133:     ADCON0bits.CHS = 0b0000;
   693     01C1  30C3               	movlw	-61
   694     01C2  1283               	bcf	3,5	;RP0=0, select bank0
   695     01C3  1303               	bcf	3,6	;RP1=0, select bank0
   696     01C4  059F               	andwf	31,f	;volatile
   697     01C5                     l1187:
   698                           
   699                           ;PreLabC05_UART.c: 134:     ADCON1bits.VCFG0 = 0;
   700     01C5  1683               	bsf	3,5	;RP0=1, select bank1
   701     01C6  1303               	bcf	3,6	;RP1=0, select bank1
   702     01C7  121F               	bcf	31,4	;volatile
   703     01C8                     l1189:
   704                           
   705                           ;PreLabC05_UART.c: 135:     ADCON1bits.VCFG1 = 0;
   706     01C8  129F               	bcf	31,5	;volatile
   707     01C9                     l1191:
   708                           
   709                           ;PreLabC05_UART.c: 136:     ADCON0bits.ADCS = 0b10;
   710     01C9  1283               	bcf	3,5	;RP0=0, select bank0
   711     01CA  1303               	bcf	3,6	;RP1=0, select bank0
   712     01CB  081F               	movf	31,w	;volatile
   713     01CC  393F               	andlw	-193
   714     01CD  3880               	iorlw	128
   715     01CE  009F               	movwf	31	;volatile
   716     01CF                     l1193:
   717                           
   718                           ;PreLabC05_UART.c: 138:     ADCON1bits.ADFM = 0;
   719     01CF  1683               	bsf	3,5	;RP0=1, select bank1
   720     01D0  1303               	bcf	3,6	;RP1=0, select bank1
   721     01D1  139F               	bcf	31,7	;volatile
   722     01D2                     l1195:
   723                           
   724                           ;PreLabC05_UART.c: 139:     ADCON0bits.ADON = 1;
   725     01D2  1283               	bcf	3,5	;RP0=0, select bank0
   726     01D3  1303               	bcf	3,6	;RP1=0, select bank0
   727     01D4  141F               	bsf	31,0	;volatile
   728                           
   729                           ;PreLabC05_UART.c: 140:      _delay((unsigned long)((1)*(8000000/4000.0)));
   730     01D5  3003               	movlw	3
   731     01D6  1683               	bsf	3,5	;RP0=1, select bank1
   732     01D7  1303               	bcf	3,6	;RP1=0, select bank1
   733     01D8  00A1               	movwf	(??_setup^(0+128)+1)
   734     01D9  3097               	movlw	151
   735     01DA  00A0               	movwf	??_setup^(0+128)
   736     01DB                     u667:
   737     01DB  0BA0               	decfsz	??_setup^(0+128),f
   738     01DC  29DB               	goto	u667
   739     01DD  0BA1               	decfsz	(??_setup^(0+128)+1),f
   740     01DE  29DB               	goto	u667
   741     01DF                     l108:
   742     01DF  0008               	return
   743     01E0                     __end_of_setup:
   744                           
   745                           	psect	text2
   746     0280                     __ptext2:	
   747 ;; *************** function _initUART *****************
   748 ;; Defined at:
   749 ;;		line 146 in file "PreLabC05_UART.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 4
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     0280                     _initUART:	
   778                           ;psect for function _initUART
   779                           
   780     0280                     l1199:	
   781                           ;incstack = 0
   782                           ; Regs used in _initUART: [wreg+status,2]
   783                           
   784                           
   785                           ;PreLabC05_UART.c: 148:     SPBRG = 12;
   786     0280  300C               	movlw	12
   787     0281  1683               	bsf	3,5	;RP0=1, select bank1
   788     0282  1303               	bcf	3,6	;RP1=0, select bank1
   789     0283  0099               	movwf	25	;volatile
   790     0284                     l1201:
   791                           
   792                           ;PreLabC05_UART.c: 149:     SPBRGH = 0;
   793     0284  019A               	clrf	26	;volatile
   794     0285                     l1203:
   795                           
   796                           ;PreLabC05_UART.c: 150:     BRGH = 0;
   797     0285  1118               	bcf	24,2	;volatile
   798     0286                     l1205:
   799                           
   800                           ;PreLabC05_UART.c: 151:     BRG16 = 0;
   801     0286  1683               	bsf	3,5	;RP0=1, select bank3
   802     0287  1703               	bsf	3,6	;RP1=1, select bank3
   803     0288  1187               	bcf	7,3	;volatile
   804     0289                     l1207:
   805                           
   806                           ;PreLabC05_UART.c: 154:     CREN = 1;
   807     0289  1283               	bcf	3,5	;RP0=0, select bank0
   808     028A  1303               	bcf	3,6	;RP1=0, select bank0
   809     028B  1618               	bsf	24,4	;volatile
   810     028C                     l1209:
   811                           
   812                           ;PreLabC05_UART.c: 155:     SYNC = 0;
   813     028C  1683               	bsf	3,5	;RP0=1, select bank1
   814     028D  1303               	bcf	3,6	;RP1=0, select bank1
   815     028E  1218               	bcf	24,4	;volatile
   816     028F                     l1211:
   817                           
   818                           ;PreLabC05_UART.c: 156:     SPEN = 1;
   819     028F  1283               	bcf	3,5	;RP0=0, select bank0
   820     0290  1303               	bcf	3,6	;RP1=0, select bank0
   821     0291  1798               	bsf	24,7	;volatile
   822     0292                     l1213:
   823                           
   824                           ;PreLabC05_UART.c: 157:     TXSTAbits.TXEN = 1;
   825     0292  1683               	bsf	3,5	;RP0=1, select bank1
   826     0293  1303               	bcf	3,6	;RP1=0, select bank1
   827     0294  1698               	bsf	24,5	;volatile
   828     0295                     l1215:
   829                           
   830                           ;PreLabC05_UART.c: 160:     RCSTAbits.RX9 = 0;
   831     0295  1283               	bcf	3,5	;RP0=0, select bank0
   832     0296  1303               	bcf	3,6	;RP1=0, select bank0
   833     0297  1318               	bcf	24,6	;volatile
   834     0298                     l1217:
   835                           
   836                           ;PreLabC05_UART.c: 163:     TXEN = 1;
   837     0298  1683               	bsf	3,5	;RP0=1, select bank1
   838     0299  1303               	bcf	3,6	;RP1=0, select bank1
   839     029A  1698               	bsf	24,5	;volatile
   840     029B                     l1219:
   841                           
   842                           ;PreLabC05_UART.c: 164:     TXIF = 0;
   843     029B  1283               	bcf	3,5	;RP0=0, select bank0
   844     029C  1303               	bcf	3,6	;RP1=0, select bank0
   845     029D  120C               	bcf	12,4	;volatile
   846     029E                     l1221:
   847                           
   848                           ;PreLabC05_UART.c: 168:     PIE1bits.RCIE = 1;
   849     029E  1683               	bsf	3,5	;RP0=1, select bank1
   850     029F  1303               	bcf	3,6	;RP1=0, select bank1
   851     02A0  168C               	bsf	12,5	;volatile
   852     02A1                     l1223:
   853                           
   854                           ;PreLabC05_UART.c: 169:     PIR1bits.RCIF = 0;
   855     02A1  1283               	bcf	3,5	;RP0=0, select bank0
   856     02A2  1303               	bcf	3,6	;RP1=0, select bank0
   857     02A3  128C               	bcf	12,5	;volatile
   858     02A4                     l111:
   859     02A4  0008               	return
   860     02A5                     __end_of_initUART:
   861                           
   862                           	psect	text3
   863     0110                     __ptext3:	
   864 ;; *************** function _isr *****************
   865 ;; Defined at:
   866 ;;		line 52 in file "PreLabC05_UART.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       4       0       0       0
   883 ;;      Totals:         0       4       0       0       0
   884 ;;Total ram usage:        4 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 3
   887 ;; This function calls:
   888 ;;		_POT
   889 ;;		_TXT
   890 ;; This function is called by:
   891 ;;		Interrupt level 1
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895     0110                     _isr:	
   896                           ;psect for function _isr
   897                           
   898     0110                     i1l1225:
   899                           
   900                           ;PreLabC05_UART.c: 54:     if(PIR1bits.RCIF){
   901     0110  1E8C               	btfss	12,5	;volatile
   902     0111  2913               	goto	u58_21
   903     0112  2914               	goto	u58_20
   904     0113                     u58_21:
   905     0113  2919               	goto	i1l1229
   906     0114                     u58_20:
   907     0114                     i1l1227:
   908                           
   909                           ;PreLabC05_UART.c: 55:         TXT();
   910     0114  120A  118A  22EB  120A  118A  	fcall	_TXT
   911     0119                     i1l1229:
   912                           
   913                           ;PreLabC05_UART.c: 59:     if (INTCONbits.RBIF)
   914     0119  1C0B               	btfss	11,0	;volatile
   915     011A  291C               	goto	u59_21
   916     011B  291D               	goto	u59_20
   917     011C                     u59_21:
   918     011C  2954               	goto	i1l94
   919     011D                     u59_20:
   920     011D                     i1l1231:
   921                           
   922                           ;PreLabC05_UART.c: 60:     {;PreLabC05_UART.c: 62:         if (PORTBbits.RB0 == 0){
   923     011D  1283               	bcf	3,5	;RP0=0, select bank0
   924     011E  1303               	bcf	3,6	;RP1=0, select bank0
   925     011F  1806               	btfsc	6,0	;volatile
   926     0120  2922               	goto	u60_21
   927     0121  2923               	goto	u60_20
   928     0122                     u60_21:
   929     0122  292C               	goto	i1l87
   930     0123                     u60_20:
   931     0123                     i1l1233:
   932                           
   933                           ;PreLabC05_UART.c: 63:             contador++;
   934     0123  3001               	movlw	1
   935     0124  07E3               	addwf	_contador,f
   936     0125  1803               	skipnc
   937     0126  0AE4               	incf	_contador+1,f
   938     0127  3000               	movlw	0
   939     0128  07E4               	addwf	_contador+1,f
   940                           
   941                           ;PreLabC05_UART.c: 64:             PORTA = contador;
   942     0129  0863               	movf	_contador,w
   943     012A  0085               	movwf	5	;volatile
   944                           
   945                           ;PreLabC05_UART.c: 65:         }
   946     012B  2953               	goto	i1l1241
   947     012C                     i1l87:	
   948                           ;PreLabC05_UART.c: 67:         else if (PORTBbits.RB1 == 0){
   949                           
   950     012C  1886               	btfsc	6,1	;volatile
   951     012D  292F               	goto	u61_21
   952     012E  2930               	goto	u61_20
   953     012F                     u61_21:
   954     012F  2939               	goto	i1l89
   955     0130                     u61_20:
   956     0130                     i1l1235:
   957                           
   958                           ;PreLabC05_UART.c: 68:             contador--;
   959     0130  30FF               	movlw	255
   960     0131  07E3               	addwf	_contador,f
   961     0132  1803               	skipnc
   962     0133  0AE4               	incf	_contador+1,f
   963     0134  30FF               	movlw	255
   964     0135  07E4               	addwf	_contador+1,f
   965                           
   966                           ;PreLabC05_UART.c: 69:             PORTA = contador;
   967     0136  0863               	movf	_contador,w
   968     0137  0085               	movwf	5	;volatile
   969                           
   970                           ;PreLabC05_UART.c: 70:         }
   971     0138  2953               	goto	i1l1241
   972     0139                     i1l89:	
   973                           ;PreLabC05_UART.c: 72:         else if (PORTBbits.RB2 == 0){
   974                           
   975     0139  1906               	btfsc	6,2	;volatile
   976     013A  293C               	goto	u62_21
   977     013B  293D               	goto	u62_20
   978     013C                     u62_21:
   979     013C  2946               	goto	i1l91
   980     013D                     u62_20:
   981     013D                     i1l1237:
   982                           
   983                           ;PreLabC05_UART.c: 73:             POT(contador, 'A');
   984     013D  3041               	movlw	65
   985     013E  00AD               	movwf	POT@puerto
   986     013F  0863               	movf	_contador,w
   987     0140  120A  118A  221A  120A  118A  	fcall	_POT
   988                           
   989                           ;PreLabC05_UART.c: 74:         }
   990     0145  2953               	goto	i1l1241
   991     0146                     i1l91:	
   992                           ;PreLabC05_UART.c: 76:         else if (PORTBbits.RB3 == 0){
   993                           
   994     0146  1986               	btfsc	6,3	;volatile
   995     0147  2949               	goto	u63_21
   996     0148  294A               	goto	u63_20
   997     0149                     u63_21:
   998     0149  2953               	goto	i1l90
   999     014A                     u63_20:
  1000     014A                     i1l1239:
  1001                           
  1002                           ;PreLabC05_UART.c: 77:             POT(PORTD, 'D');
  1003     014A  3044               	movlw	68
  1004     014B  00AD               	movwf	POT@puerto
  1005     014C  0808               	movf	8,w	;volatile
  1006     014D  120A  118A  221A  120A  118A  	fcall	_POT
  1007     0152  2953               	goto	i1l1241
  1008     0153                     i1l90:
  1009     0153                     i1l1241:
  1010                           
  1011                           ;PreLabC05_UART.c: 79:         INTCONbits.RBIF = 0;
  1012     0153  100B               	bcf	11,0	;volatile
  1013     0154                     i1l94:
  1014     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1015     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0156  0860               	movf	??_isr+3,w
  1017     0157  00FF               	movwf	btemp+1
  1018     0158  085F               	movf	??_isr+2,w
  1019     0159  008A               	movwf	10
  1020     015A  085E               	movf	??_isr+1,w
  1021     015B  0084               	movwf	4
  1022     015C  0E5D               	swapf	??_isr,w
  1023     015D  0083               	movwf	3
  1024     015E  0EFE               	swapf	btemp,f
  1025     015F  0E7E               	swapf	btemp,w
  1026     0160  0009               	retfie
  1027     0161                     __end_of_isr:
  1028                           
  1029                           	psect	intentry
  1030     0004                     __pintentry:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1033                           
  1034     0004                     interrupt_function:
  1035     007E                     saved_w	set	btemp
  1036     0004  00FE               	movwf	btemp
  1037     0005  0E03               	swapf	3,w
  1038     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1040     0008  00DD               	movwf	??_isr
  1041     0009  0804               	movf	4,w
  1042     000A  00DE               	movwf	??_isr+1
  1043     000B  080A               	movf	10,w
  1044     000C  00DF               	movwf	??_isr+2
  1045     000D  087F               	movf	btemp+1,w
  1046     000E  00E0               	movwf	??_isr+3
  1047     000F  120A  118A  2910   	ljmp	_isr
  1048                           
  1049                           	psect	text4
  1050     02EB                     __ptext4:	
  1051 ;; *************** function _TXT *****************
  1052 ;; Defined at:
  1053 ;;		line 205 in file "PreLabC05_UART.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  caracter        1    1[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0
  1069 ;;      Temps:          1       0       0       0       0
  1070 ;;      Totals:         2       0       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_isr
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080     02EB                     _TXT:	
  1081                           ;psect for function _TXT
  1082                           
  1083     02EB                     i1l1135:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _TXT: [wreg+status,2+status,0]
  1086                           
  1087     02EB                     i1l126:	
  1088                           ;PreLabC05_UART.c: 207:     while(!PIR1bits.RCIF);
  1089                           
  1090     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1091     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1092     02ED  1E8C               	btfss	12,5	;volatile
  1093     02EE  2AF0               	goto	u55_21
  1094     02EF  2AF1               	goto	u55_20
  1095     02F0                     u55_21:
  1096     02F0  2AEB               	goto	i1l126
  1097     02F1                     u55_20:
  1098     02F1                     i1l1137:
  1099                           
  1100                           ;PreLabC05_UART.c: 208:     char caracter = RCREG;
  1101     02F1  081A               	movf	26,w	;volatile
  1102     02F2  00F1               	movwf	TXT@caracter
  1103     02F3                     i1l1139:
  1104                           
  1105                           ;PreLabC05_UART.c: 209:     if (caracter == '+'){
  1106     02F3  302B               	movlw	43
  1107     02F4  0671               	xorwf	TXT@caracter,w
  1108     02F5  1D03               	btfss	3,2
  1109     02F6  2AF8               	goto	u56_21
  1110     02F7  2AF9               	goto	u56_20
  1111     02F8                     u56_21:
  1112     02F8  2AFE               	goto	i1l1143
  1113     02F9                     u56_20:
  1114     02F9                     i1l1141:
  1115                           
  1116                           ;PreLabC05_UART.c: 210:         PORTD++;
  1117     02F9  3001               	movlw	1
  1118     02FA  00F0               	movwf	??_TXT
  1119     02FB  0870               	movf	??_TXT,w
  1120     02FC  0788               	addwf	8,f	;volatile
  1121                           
  1122                           ;PreLabC05_UART.c: 211:     }
  1123     02FD  2B06               	goto	i1l132
  1124     02FE                     i1l1143:
  1125     02FE  302D               	movlw	45
  1126     02FF  0671               	xorwf	TXT@caracter,w
  1127     0300  1D03               	btfss	3,2
  1128     0301  2B03               	goto	u57_21
  1129     0302  2B04               	goto	u57_20
  1130     0303                     u57_21:
  1131     0303  2B06               	goto	i1l132
  1132     0304                     u57_20:
  1133     0304                     i1l1145:
  1134                           
  1135                           ;PreLabC05_UART.c: 213:         PORTD--;
  1136     0304  3001               	movlw	1
  1137     0305  0288               	subwf	8,f	;volatile
  1138     0306                     i1l132:
  1139     0306  0008               	return
  1140     0307                     __end_of_TXT:
  1141                           
  1142                           	psect	text5
  1143     021A                     __ptext5:	
  1144 ;; *************** function _POT *****************
  1145 ;; Defined at:
  1146 ;;		line 191 in file "PreLabC05_UART.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  contador        1    wreg     unsigned char 
  1149 ;;  puerto          1   13[BANK0 ] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  contador        1   60[BANK0 ] unsigned char 
  1152 ;;  oracion        40   16[BANK0 ] unsigned char [40]
  1153 ;;  CVPOT           4   56[BANK0 ] unsigned char [4]
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       1       0       0       0
  1164 ;;      Locals:         0      45       0       0       0
  1165 ;;      Temps:          0       2       0       0       0
  1166 ;;      Totals:         0      48       0       0       0
  1167 ;;Total ram usage:       48 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 2
  1170 ;; This function calls:
  1171 ;;		_cadena
  1172 ;;		_sprintf
  1173 ;; This function is called by:
  1174 ;;		_isr
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178     021A                     _POT:	
  1179                           ;psect for function _POT
  1180                           
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _POT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1184                           ;POT@contador stored from wreg
  1185     021A  1283               	bcf	3,5	;RP0=0, select bank0
  1186     021B  1303               	bcf	3,6	;RP1=0, select bank0
  1187     021C  00DC               	movwf	POT@contador
  1188     021D                     i1l1147:
  1189                           
  1190                           ;PreLabC05_UART.c: 191: void POT (uint8_t contador, char puerto);PreLabC05_UART.c: 192: 
      +                          {;PreLabC05_UART.c: 193:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1191     021D  301A               	movlw	26
  1192     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1193     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1194     0220  00AF               	movwf	??_POT+1
  1195     0221  30F7               	movlw	247
  1196     0222  00AE               	movwf	??_POT
  1197     0223                     u67_27:
  1198     0223  0BAE               	decfsz	??_POT,f
  1199     0224  2A23               	goto	u67_27
  1200     0225  0BAF               	decfsz	??_POT+1,f
  1201     0226  2A23               	goto	u67_27
  1202     0227  2A28               	nop2
  1203     0228                     i1l1149:
  1204                           
  1205                           ;PreLabC05_UART.c: 195:         char oracion[40];;PreLabC05_UART.c: 196:         char CV
      +                          POT[4];;PreLabC05_UART.c: 197:         sprintf(CVPOT, "%d\r", contador);
  1206     0228  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1207     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1208     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1209     022B  00A0               	movwf	sprintf@f
  1210     022C  085C               	movf	POT@contador,w
  1211     022D  00AE               	movwf	??_POT
  1212     022E  01AF               	clrf	??_POT+1
  1213     022F  082E               	movf	??_POT,w
  1214     0230  00A1               	movwf	?_sprintf+1
  1215     0231  082F               	movf	??_POT+1,w
  1216     0232  00A2               	movwf	?_sprintf+2
  1217     0233  3058               	movlw	(low (POT@CVPOT| 0))& (0+255)
  1218     0234  120A  118A  201F  120A  118A  	fcall	_sprintf
  1219     0239                     i1l1151:
  1220                           
  1221                           ;PreLabC05_UART.c: 198:         sprintf(oracion, "El valor del puerto %c es:", puerto);
  1222     0239  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1223     023A  1283               	bcf	3,5	;RP0=0, select bank0
  1224     023B  1303               	bcf	3,6	;RP1=0, select bank0
  1225     023C  00A0               	movwf	sprintf@f
  1226     023D  082D               	movf	POT@puerto,w
  1227     023E  00AE               	movwf	??_POT
  1228     023F  01AF               	clrf	??_POT+1
  1229     0240  082E               	movf	??_POT,w
  1230     0241  00A1               	movwf	?_sprintf+1
  1231     0242  082F               	movf	??_POT+1,w
  1232     0243  00A2               	movwf	?_sprintf+2
  1233     0244  3030               	movlw	(low (POT@oracion| 0))& (0+255)
  1234     0245  120A  118A  201F  120A  118A  	fcall	_sprintf
  1235     024A                     i1l1153:
  1236                           
  1237                           ;PreLabC05_UART.c: 200:         cadena(CVPOT);
  1238     024A  3058               	movlw	(low (POT@CVPOT| 0))& (0+255)
  1239     024B  120A  118A  22A5  120A  118A  	fcall	_cadena
  1240     0250                     i1l123:
  1241     0250  0008               	return
  1242     0251                     __end_of_POT:
  1243                           
  1244                           	psect	text6
  1245     001F                     __ptext6:	
  1246 ;; *************** function _sprintf *****************
  1247 ;; Defined at:
  1248 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  sp              1    wreg     PTR unsigned char 
  1251 ;;		 -> POT@oracion(40), POT@CVPOT(4), 
  1252 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1253 ;;		 -> STR_2(27), STR_1(4), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1256 ;;		 -> POT@oracion(40), POT@CVPOT(4), 
  1257 ;;  tmpval          4    0        struct .
  1258 ;;  val             2    9[BANK0 ] unsigned int 
  1259 ;;  cp              2    0        PTR const unsigned char 
  1260 ;;  len             2    0        unsigned int 
  1261 ;;  c               1   12[BANK0 ] unsigned char 
  1262 ;;  ap              1    8[BANK0 ] PTR void [1]
  1263 ;;		 -> ?_sprintf(2), 
  1264 ;;  prec            1    7[BANK0 ] char 
  1265 ;;  flag            1    6[BANK0 ] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  2    0[BANK0 ] int 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       3       0       0       0
  1276 ;;      Locals:         0       7       0       0       0
  1277 ;;      Temps:          0       3       0       0       0
  1278 ;;      Totals:         0      13       0       0       0
  1279 ;;Total ram usage:       13 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 1
  1282 ;; This function calls:
  1283 ;;		___lwdiv
  1284 ;;		___lwmod
  1285 ;; This function is called by:
  1286 ;;		_POT
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290     001F                     _sprintf:	
  1291                           ;psect for function _sprintf
  1292                           
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1296                           ;sprintf@sp stored from wreg
  1297     001F  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0020  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0021  00AB               	movwf	sprintf@sp
  1300     0022                     i1l1067:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1303     0022  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1304     0023  00A8               	movwf	sprintf@ap
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1307     0024  28FB               	goto	i1l1125
  1308     0025                     i1l1069:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1311     0025  3025               	movlw	37
  1312     0026  062C               	xorwf	sprintf@c,w
  1313     0027  1903               	btfsc	3,2
  1314     0028  282A               	goto	u48_21
  1315     0029  282B               	goto	u48_20
  1316     002A                     u48_21:
  1317     002A  2835               	goto	i1l1075
  1318     002B                     u48_20:
  1319     002B                     i1l1071:
  1320                           
  1321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1322     002B  082B               	movf	sprintf@sp,w
  1323     002C  0084               	movwf	4
  1324     002D  082C               	movf	sprintf@c,w
  1325     002E  1383               	bcf	3,7	;select IRP bank0
  1326     002F  0080               	movwf	0
  1327     0030                     i1l1073:
  1328     0030  3001               	movlw	1
  1329     0031  00A3               	movwf	??_sprintf
  1330     0032  0823               	movf	??_sprintf,w
  1331     0033  07AB               	addwf	sprintf@sp,f
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1334     0034  28FB               	goto	i1l1125
  1335     0035                     i1l1075:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1338     0035  01A6               	clrf	sprintf@flag
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1341     0036  284A               	goto	i1l1085
  1342     0037                     i1l1077:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1345     0037  0828               	movf	sprintf@ap,w
  1346     0038  0084               	movwf	4
  1347     0039  1383               	bcf	3,7	;select IRP bank0
  1348     003A  0800               	movf	0,w
  1349     003B  00AC               	movwf	sprintf@c
  1350     003C                     i1l1079:
  1351     003C  3002               	movlw	2
  1352     003D  00A3               	movwf	??_sprintf
  1353     003E  0823               	movf	??_sprintf,w
  1354     003F  07A8               	addwf	sprintf@ap,f
  1355     0040                     i1l1081:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1358     0040  082B               	movf	sprintf@sp,w
  1359     0041  0084               	movwf	4
  1360     0042  082C               	movf	sprintf@c,w
  1361     0043  1383               	bcf	3,7	;select IRP bank0
  1362     0044  0080               	movwf	0
  1363     0045  3001               	movlw	1
  1364     0046  00A3               	movwf	??_sprintf
  1365     0047  0823               	movf	??_sprintf,w
  1366     0048  07AB               	addwf	sprintf@sp,f
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 836:    continue;
  1369     0049  28FB               	goto	i1l1125
  1370     004A                     i1l1085:
  1371     004A  3001               	movlw	1
  1372     004B  07A0               	addwf	sprintf@f,f
  1373     004C  30FF               	movlw	-1
  1374     004D  0720               	addwf	sprintf@f,w
  1375     004E  0084               	movwf	4
  1376     004F  120A  118A  2251  120A  118A  	fcall	stringdir
  1377     0054  00AC               	movwf	sprintf@c
  1378     0055  00A3               	movwf	??_sprintf
  1379     0056  01A4               	clrf	??_sprintf+1
  1380                           
  1381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1382                           ; Switch size 1, requested type "simple"
  1383                           ; Number of cases is 1, Range of values is 0 to 0
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte            4     3 (average)
  1387                           ; direct_byte           11     8 (fixed)
  1388                           ; jumptable            260     6 (fixed)
  1389                           ;	Chosen strategy is simple_byte
  1390     0057  0824               	movf	??_sprintf+1,w
  1391     0058  3A00               	xorlw	0	; case 0
  1392     0059  1903               	skipnz
  1393     005A  285C               	goto	i1l1269
  1394     005B  2840               	goto	i1l1081
  1395     005C                     i1l1269:
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 4, Range of values is 0 to 105
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           13     7 (average)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404     005C  0823               	movf	??_sprintf,w
  1405     005D  3A00               	xorlw	0	; case 0
  1406     005E  1903               	skipnz
  1407     005F  290B               	goto	i1l1127
  1408     0060  3A63               	xorlw	99	; case 99
  1409     0061  1903               	skipnz
  1410     0062  2837               	goto	i1l1077
  1411     0063  3A07               	xorlw	7	; case 100
  1412     0064  1903               	skipnz
  1413     0065  286A               	goto	i1l1087
  1414     0066  3A0D               	xorlw	13	; case 105
  1415     0067  1903               	skipnz
  1416     0068  286A               	goto	i1l1087
  1417     0069  2840               	goto	i1l1081
  1418     006A                     i1l1087:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1421     006A  0828               	movf	sprintf@ap,w
  1422     006B  0084               	movwf	4
  1423     006C  1383               	bcf	3,7	;select IRP bank0
  1424     006D  0800               	movf	0,w
  1425     006E  00A9               	movwf	sprintf@val
  1426     006F  0A84               	incf	4,f
  1427     0070  0800               	movf	0,w
  1428     0071  00AA               	movwf	sprintf@val+1
  1429     0072                     i1l1089:
  1430     0072  3002               	movlw	2
  1431     0073  00A3               	movwf	??_sprintf
  1432     0074  0823               	movf	??_sprintf,w
  1433     0075  07A8               	addwf	sprintf@ap,f
  1434     0076                     i1l1091:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1437     0076  1FAA               	btfss	sprintf@val+1,7
  1438     0077  2879               	goto	u49_21
  1439     0078  287A               	goto	u49_20
  1440     0079                     u49_21:
  1441     0079  2883               	goto	i1l1097
  1442     007A                     u49_20:
  1443     007A                     i1l1093:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1446     007A  3003               	movlw	3
  1447     007B  00A3               	movwf	??_sprintf
  1448     007C  0823               	movf	??_sprintf,w
  1449     007D  04A6               	iorwf	sprintf@flag,f
  1450     007E                     i1l1095:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1453     007E  09A9               	comf	sprintf@val,f
  1454     007F  09AA               	comf	sprintf@val+1,f
  1455     0080  0AA9               	incf	sprintf@val,f
  1456     0081  1903               	skipnz
  1457     0082  0AAA               	incf	sprintf@val+1,f
  1458     0083                     i1l1097:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1461     0083  01AC               	clrf	sprintf@c
  1462     0084  0AAC               	incf	sprintf@c,f
  1463     0085                     i1l1103:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1466     0085  082C               	movf	sprintf@c,w
  1467     0086  00A3               	movwf	??_sprintf
  1468     0087  0723               	addwf	??_sprintf,w
  1469     0088  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1470     0089  0084               	movwf	4
  1471     008A  120A  118A  2251  120A  118A  	fcall	stringdir
  1472     008F  00A4               	movwf	??_sprintf+1
  1473     0090  120A  118A  2251  120A  118A  	fcall	stringdir
  1474     0095  00A5               	movwf	??_sprintf+2
  1475     0096  0825               	movf	??_sprintf+2,w
  1476     0097  022A               	subwf	sprintf@val+1,w
  1477     0098  1D03               	skipz
  1478     0099  289C               	goto	u50_25
  1479     009A  0824               	movf	??_sprintf+1,w
  1480     009B  0229               	subwf	sprintf@val,w
  1481     009C                     u50_25:
  1482     009C  1803               	skipnc
  1483     009D  289F               	goto	u50_21
  1484     009E  28A0               	goto	u50_20
  1485     009F                     u50_21:
  1486     009F  28A1               	goto	i1l1107
  1487     00A0                     u50_20:
  1488     00A0  28AB               	goto	i1l1109
  1489     00A1                     i1l1107:
  1490     00A1  3001               	movlw	1
  1491     00A2  00A3               	movwf	??_sprintf
  1492     00A3  0823               	movf	??_sprintf,w
  1493     00A4  07AC               	addwf	sprintf@c,f
  1494     00A5  3005               	movlw	5
  1495     00A6  062C               	xorwf	sprintf@c,w
  1496     00A7  1D03               	btfss	3,2
  1497     00A8  28AA               	goto	u51_21
  1498     00A9  28AB               	goto	u51_20
  1499     00AA                     u51_21:
  1500     00AA  2885               	goto	i1l1103
  1501     00AB                     u51_20:
  1502     00AB                     i1l1109:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1505     00AB  0826               	movf	sprintf@flag,w
  1506     00AC  3903               	andlw	3
  1507     00AD  1903               	btfsc	3,2
  1508     00AE  28B0               	goto	u52_21
  1509     00AF  28B1               	goto	u52_20
  1510     00B0                     u52_21:
  1511     00B0  28BA               	goto	i1l1115
  1512     00B1                     u52_20:
  1513     00B1                     i1l1111:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1516     00B1  082B               	movf	sprintf@sp,w
  1517     00B2  0084               	movwf	4
  1518     00B3  302D               	movlw	45
  1519     00B4  1383               	bcf	3,7	;select IRP bank0
  1520     00B5  0080               	movwf	0
  1521     00B6                     i1l1113:
  1522     00B6  3001               	movlw	1
  1523     00B7  00A3               	movwf	??_sprintf
  1524     00B8  0823               	movf	??_sprintf,w
  1525     00B9  07AB               	addwf	sprintf@sp,f
  1526     00BA                     i1l1115:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1529     00BA  082C               	movf	sprintf@c,w
  1530     00BB  00A7               	movwf	sprintf@prec
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1533     00BC  28F2               	goto	i1l1123
  1534     00BD                     i1l1117:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1537     00BD  300A               	movlw	10
  1538     00BE  00F8               	movwf	___lwmod@divisor
  1539     00BF  3000               	movlw	0
  1540     00C0  00F9               	movwf	___lwmod@divisor+1
  1541     00C1  0827               	movf	sprintf@prec,w
  1542     00C2  00A3               	movwf	??_sprintf
  1543     00C3  0723               	addwf	??_sprintf,w
  1544     00C4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1545     00C5  0084               	movwf	4
  1546     00C6  120A  118A  2251  120A  118A  	fcall	stringdir
  1547     00CB  00F0               	movwf	___lwdiv@divisor
  1548     00CC  120A  118A  2251  120A  118A  	fcall	stringdir
  1549     00D1  00F1               	movwf	___lwdiv@divisor+1
  1550     00D2  082A               	movf	sprintf@val+1,w
  1551     00D3  00F3               	movwf	___lwdiv@dividend+1
  1552     00D4  0829               	movf	sprintf@val,w
  1553     00D5  00F2               	movwf	___lwdiv@dividend
  1554     00D6  120A  118A  2161  120A  118A  	fcall	___lwdiv
  1555     00DB  0871               	movf	?___lwdiv+1,w
  1556     00DC  00FB               	movwf	___lwmod@dividend+1
  1557     00DD  0870               	movf	?___lwdiv,w
  1558     00DE  00FA               	movwf	___lwmod@dividend
  1559     00DF  120A  118A  21E0  120A  118A  	fcall	___lwmod
  1560     00E4  0878               	movf	?___lwmod,w
  1561     00E5  3E30               	addlw	48
  1562     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1563     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1564     00E8  00AC               	movwf	sprintf@c
  1565     00E9                     i1l1119:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1568     00E9  082B               	movf	sprintf@sp,w
  1569     00EA  0084               	movwf	4
  1570     00EB  082C               	movf	sprintf@c,w
  1571     00EC  1383               	bcf	3,7	;select IRP bank0
  1572     00ED  0080               	movwf	0
  1573     00EE                     i1l1121:
  1574     00EE  3001               	movlw	1
  1575     00EF  00A3               	movwf	??_sprintf
  1576     00F0  0823               	movf	??_sprintf,w
  1577     00F1  07AB               	addwf	sprintf@sp,f
  1578     00F2                     i1l1123:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1581     00F2  30FF               	movlw	255
  1582     00F3  00A3               	movwf	??_sprintf
  1583     00F4  0823               	movf	??_sprintf,w
  1584     00F5  07A7               	addwf	sprintf@prec,f
  1585     00F6  0A27               	incf	sprintf@prec,w
  1586     00F7  1D03               	btfss	3,2
  1587     00F8  28FA               	goto	u53_21
  1588     00F9  28FB               	goto	u53_20
  1589     00FA                     u53_21:
  1590     00FA  28BD               	goto	i1l1117
  1591     00FB                     u53_20:
  1592     00FB                     i1l1125:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1595     00FB  3001               	movlw	1
  1596     00FC  07A0               	addwf	sprintf@f,f
  1597     00FD  30FF               	movlw	-1
  1598     00FE  0720               	addwf	sprintf@f,w
  1599     00FF  0084               	movwf	4
  1600     0100  120A  118A  2251  120A  118A  	fcall	stringdir
  1601     0105  00AC               	movwf	sprintf@c
  1602     0106  082C               	movf	sprintf@c,w
  1603     0107  1D03               	btfss	3,2
  1604     0108  290A               	goto	u54_21
  1605     0109  290B               	goto	u54_20
  1606     010A                     u54_21:
  1607     010A  2825               	goto	i1l1069
  1608     010B                     u54_20:
  1609     010B                     i1l1127:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1612     010B  082B               	movf	sprintf@sp,w
  1613     010C  0084               	movwf	4
  1614     010D  1383               	bcf	3,7	;select IRP bank0
  1615     010E  0180               	clrf	0
  1616     010F                     i1l243:
  1617     010F  0008               	return
  1618     0110                     __end_of_sprintf:
  1619                           
  1620                           	psect	text7
  1621     01E0                     __ptext7:	
  1622 ;; *************** function ___lwmod *****************
  1623 ;; Defined at:
  1624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  divisor         2    8[COMMON] unsigned int 
  1627 ;;  dividend        2   10[COMMON] unsigned int 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  counter         1   13[COMMON] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2    8[COMMON] unsigned int 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         4       0       0       0       0
  1640 ;;      Locals:         1       0       0       0       0
  1641 ;;      Temps:          1       0       0       0       0
  1642 ;;      Totals:         6       0       0       0       0
  1643 ;;Total ram usage:        6 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_sprintf
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652     01E0                     ___lwmod:	
  1653                           ;psect for function ___lwmod
  1654                           
  1655     01E0                     i1l1037:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1658                           
  1659     01E0  0878               	movf	___lwmod@divisor,w
  1660     01E1  0479               	iorwf	___lwmod@divisor+1,w
  1661     01E2  1903               	btfsc	3,2
  1662     01E3  29E5               	goto	u40_21
  1663     01E4  29E6               	goto	u40_20
  1664     01E5                     u40_21:
  1665     01E5  2A15               	goto	i1l1055
  1666     01E6                     u40_20:
  1667     01E6                     i1l1039:
  1668     01E6  01FD               	clrf	___lwmod@counter
  1669     01E7  0AFD               	incf	___lwmod@counter,f
  1670     01E8  29F4               	goto	i1l1045
  1671     01E9                     i1l1041:
  1672     01E9  3001               	movlw	1
  1673     01EA                     u41_25:
  1674     01EA  1003               	clrc
  1675     01EB  0DF8               	rlf	___lwmod@divisor,f
  1676     01EC  0DF9               	rlf	___lwmod@divisor+1,f
  1677     01ED  3EFF               	addlw	-1
  1678     01EE  1D03               	skipz
  1679     01EF  29EA               	goto	u41_25
  1680     01F0                     i1l1043:
  1681     01F0  3001               	movlw	1
  1682     01F1  00FC               	movwf	??___lwmod
  1683     01F2  087C               	movf	??___lwmod,w
  1684     01F3  07FD               	addwf	___lwmod@counter,f
  1685     01F4                     i1l1045:
  1686     01F4  1FF9               	btfss	___lwmod@divisor+1,7
  1687     01F5  29F7               	goto	u42_21
  1688     01F6  29F8               	goto	u42_20
  1689     01F7                     u42_21:
  1690     01F7  29E9               	goto	i1l1041
  1691     01F8                     u42_20:
  1692     01F8                     i1l1047:
  1693     01F8  0879               	movf	___lwmod@divisor+1,w
  1694     01F9  027B               	subwf	___lwmod@dividend+1,w
  1695     01FA  1D03               	skipz
  1696     01FB  29FE               	goto	u43_25
  1697     01FC  0878               	movf	___lwmod@divisor,w
  1698     01FD  027A               	subwf	___lwmod@dividend,w
  1699     01FE                     u43_25:
  1700     01FE  1C03               	skipc
  1701     01FF  2A01               	goto	u43_21
  1702     0200  2A02               	goto	u43_20
  1703     0201                     u43_21:
  1704     0201  2A08               	goto	i1l1051
  1705     0202                     u43_20:
  1706     0202                     i1l1049:
  1707     0202  0878               	movf	___lwmod@divisor,w
  1708     0203  02FA               	subwf	___lwmod@dividend,f
  1709     0204  0879               	movf	___lwmod@divisor+1,w
  1710     0205  1C03               	skipc
  1711     0206  03FB               	decf	___lwmod@dividend+1,f
  1712     0207  02FB               	subwf	___lwmod@dividend+1,f
  1713     0208                     i1l1051:
  1714     0208  3001               	movlw	1
  1715     0209                     u44_25:
  1716     0209  1003               	clrc
  1717     020A  0CF9               	rrf	___lwmod@divisor+1,f
  1718     020B  0CF8               	rrf	___lwmod@divisor,f
  1719     020C  3EFF               	addlw	-1
  1720     020D  1D03               	skipz
  1721     020E  2A09               	goto	u44_25
  1722     020F                     i1l1053:
  1723     020F  3001               	movlw	1
  1724     0210  02FD               	subwf	___lwmod@counter,f
  1725     0211  1D03               	btfss	3,2
  1726     0212  2A14               	goto	u45_21
  1727     0213  2A15               	goto	u45_20
  1728     0214                     u45_21:
  1729     0214  29F8               	goto	i1l1047
  1730     0215                     u45_20:
  1731     0215                     i1l1055:
  1732     0215  087B               	movf	___lwmod@dividend+1,w
  1733     0216  00F9               	movwf	?___lwmod+1
  1734     0217  087A               	movf	___lwmod@dividend,w
  1735     0218  00F8               	movwf	?___lwmod
  1736     0219                     i1l529:
  1737     0219  0008               	return
  1738     021A                     __end_of___lwmod:
  1739                           
  1740                           	psect	text8
  1741     0161                     __ptext8:	
  1742 ;; *************** function ___lwdiv *****************
  1743 ;; Defined at:
  1744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  divisor         2    0[COMMON] unsigned int 
  1747 ;;  dividend        2    2[COMMON] unsigned int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  quotient        2    5[COMMON] unsigned int 
  1750 ;;  counter         1    7[COMMON] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2    0[COMMON] unsigned int 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         4       0       0       0       0
  1761 ;;      Locals:         3       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0
  1763 ;;      Totals:         8       0       0       0       0
  1764 ;;Total ram usage:        8 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_sprintf
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773     0161                     ___lwdiv:	
  1774                           ;psect for function ___lwdiv
  1775                           
  1776     0161                     i1l1011:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1779                           
  1780     0161  01F5               	clrf	___lwdiv@quotient
  1781     0162  01F6               	clrf	___lwdiv@quotient+1
  1782     0163                     i1l1013:
  1783     0163  0870               	movf	___lwdiv@divisor,w
  1784     0164  0471               	iorwf	___lwdiv@divisor+1,w
  1785     0165  1903               	btfsc	3,2
  1786     0166  2968               	goto	u33_21
  1787     0167  2969               	goto	u33_20
  1788     0168                     u33_21:
  1789     0168  29A0               	goto	i1l1033
  1790     0169                     u33_20:
  1791     0169                     i1l1015:
  1792     0169  01F7               	clrf	___lwdiv@counter
  1793     016A  0AF7               	incf	___lwdiv@counter,f
  1794     016B  2977               	goto	i1l1021
  1795     016C                     i1l1017:
  1796     016C  3001               	movlw	1
  1797     016D                     u34_25:
  1798     016D  1003               	clrc
  1799     016E  0DF0               	rlf	___lwdiv@divisor,f
  1800     016F  0DF1               	rlf	___lwdiv@divisor+1,f
  1801     0170  3EFF               	addlw	-1
  1802     0171  1D03               	skipz
  1803     0172  296D               	goto	u34_25
  1804     0173                     i1l1019:
  1805     0173  3001               	movlw	1
  1806     0174  00F4               	movwf	??___lwdiv
  1807     0175  0874               	movf	??___lwdiv,w
  1808     0176  07F7               	addwf	___lwdiv@counter,f
  1809     0177                     i1l1021:
  1810     0177  1FF1               	btfss	___lwdiv@divisor+1,7
  1811     0178  297A               	goto	u35_21
  1812     0179  297B               	goto	u35_20
  1813     017A                     u35_21:
  1814     017A  296C               	goto	i1l1017
  1815     017B                     u35_20:
  1816     017B                     i1l1023:
  1817     017B  3001               	movlw	1
  1818     017C                     u36_25:
  1819     017C  1003               	clrc
  1820     017D  0DF5               	rlf	___lwdiv@quotient,f
  1821     017E  0DF6               	rlf	___lwdiv@quotient+1,f
  1822     017F  3EFF               	addlw	-1
  1823     0180  1D03               	skipz
  1824     0181  297C               	goto	u36_25
  1825     0182  0871               	movf	___lwdiv@divisor+1,w
  1826     0183  0273               	subwf	___lwdiv@dividend+1,w
  1827     0184  1D03               	skipz
  1828     0185  2988               	goto	u37_25
  1829     0186  0870               	movf	___lwdiv@divisor,w
  1830     0187  0272               	subwf	___lwdiv@dividend,w
  1831     0188                     u37_25:
  1832     0188  1C03               	skipc
  1833     0189  298B               	goto	u37_21
  1834     018A  298C               	goto	u37_20
  1835     018B                     u37_21:
  1836     018B  2993               	goto	i1l1029
  1837     018C                     u37_20:
  1838     018C                     i1l1025:
  1839     018C  0870               	movf	___lwdiv@divisor,w
  1840     018D  02F2               	subwf	___lwdiv@dividend,f
  1841     018E  0871               	movf	___lwdiv@divisor+1,w
  1842     018F  1C03               	skipc
  1843     0190  03F3               	decf	___lwdiv@dividend+1,f
  1844     0191  02F3               	subwf	___lwdiv@dividend+1,f
  1845     0192                     i1l1027:
  1846     0192  1475               	bsf	___lwdiv@quotient,0
  1847     0193                     i1l1029:
  1848     0193  3001               	movlw	1
  1849     0194                     u38_25:
  1850     0194  1003               	clrc
  1851     0195  0CF1               	rrf	___lwdiv@divisor+1,f
  1852     0196  0CF0               	rrf	___lwdiv@divisor,f
  1853     0197  3EFF               	addlw	-1
  1854     0198  1D03               	skipz
  1855     0199  2994               	goto	u38_25
  1856     019A                     i1l1031:
  1857     019A  3001               	movlw	1
  1858     019B  02F7               	subwf	___lwdiv@counter,f
  1859     019C  1D03               	btfss	3,2
  1860     019D  299F               	goto	u39_21
  1861     019E  29A0               	goto	u39_20
  1862     019F                     u39_21:
  1863     019F  297B               	goto	i1l1023
  1864     01A0                     u39_20:
  1865     01A0                     i1l1033:
  1866     01A0  0876               	movf	___lwdiv@quotient+1,w
  1867     01A1  00F1               	movwf	?___lwdiv+1
  1868     01A2  0875               	movf	___lwdiv@quotient,w
  1869     01A3  00F0               	movwf	?___lwdiv
  1870     01A4                     i1l519:
  1871     01A4  0008               	return
  1872     01A5                     __end_of___lwdiv:
  1873                           
  1874                           	psect	text9
  1875     02A5                     __ptext9:	
  1876 ;; *************** function _cadena *****************
  1877 ;; Defined at:
  1878 ;;		line 179 in file "PreLabC05_UART.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  txt             1    wreg     PTR unsigned char 
  1881 ;;		 -> POT@CVPOT(4), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  txt             1    3[COMMON] PTR unsigned char 
  1884 ;;		 -> POT@CVPOT(4), 
  1885 ;;  i               2    1[COMMON] int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         3       0       0       0       0
  1897 ;;      Temps:          1       0       0       0       0
  1898 ;;      Totals:         4       0       0       0       0
  1899 ;;Total ram usage:        4 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_POT
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     02A5                     _cadena:	
  1909                           ;psect for function _cadena
  1910                           
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0]
  1914                           ;cadena@txt stored from wreg
  1915     02A5  00F3               	movwf	cadena@txt
  1916     02A6                     i1l1059:
  1917                           
  1918                           ;PreLabC05_UART.c: 180:     int i;;PreLabC05_UART.c: 182:     for(i = 0; txt[i] != '\0';
      +                           i++){
  1919     02A6  01F1               	clrf	cadena@i
  1920     02A7  01F2               	clrf	cadena@i+1
  1921     02A8  2ABD               	goto	i1l1065
  1922     02A9                     i1l116:
  1923     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1924     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1925     02AB  1E0C               	btfss	12,4	;volatile
  1926     02AC  2AAE               	goto	u46_21
  1927     02AD  2AAF               	goto	u46_20
  1928     02AE                     u46_21:
  1929     02AE  2AA9               	goto	i1l116
  1930     02AF                     u46_20:
  1931     02AF                     i1l1061:
  1932                           
  1933                           ;PreLabC05_UART.c: 186:         TXREG = txt[i];
  1934     02AF  0871               	movf	cadena@i,w
  1935     02B0  0773               	addwf	cadena@txt,w
  1936     02B1  00F0               	movwf	??_cadena
  1937     02B2  0870               	movf	??_cadena,w
  1938     02B3  0084               	movwf	4
  1939     02B4  1383               	bcf	3,7	;select IRP bank0
  1940     02B5  0800               	movf	0,w
  1941     02B6  0099               	movwf	25	;volatile
  1942     02B7                     i1l1063:
  1943                           
  1944                           ;PreLabC05_UART.c: 187:     }
  1945     02B7  3001               	movlw	1
  1946     02B8  07F1               	addwf	cadena@i,f
  1947     02B9  1803               	skipnc
  1948     02BA  0AF2               	incf	cadena@i+1,f
  1949     02BB  3000               	movlw	0
  1950     02BC  07F2               	addwf	cadena@i+1,f
  1951     02BD                     i1l1065:
  1952     02BD  0871               	movf	cadena@i,w
  1953     02BE  0773               	addwf	cadena@txt,w
  1954     02BF  00F0               	movwf	??_cadena
  1955     02C0  0870               	movf	??_cadena,w
  1956     02C1  0084               	movwf	4
  1957     02C2  1383               	bcf	3,7	;select IRP bank0
  1958     02C3  0800               	movf	0,w
  1959     02C4  1D03               	btfss	3,2
  1960     02C5  2AC7               	goto	u47_21
  1961     02C6  2AC8               	goto	u47_20
  1962     02C7                     u47_21:
  1963     02C7  2AA9               	goto	i1l116
  1964     02C8                     u47_20:
  1965     02C8                     i1l120:
  1966     02C8  0008               	return
  1967     02C9                     __end_of_cadena:
  1968     007E                     btemp	set	126	;btemp
  1969     007E                     wtemp0	set	126
  1970                           
  1971                           	psect	idloc
  1972                           
  1973                           ;Config register IDLOC0 @ 0x2000
  1974                           ;	unspecified, using default values
  1975     2000                     	org	8192
  1976     2000  3FFF               	dw	16383
  1977                           
  1978                           ;Config register IDLOC1 @ 0x2001
  1979                           ;	unspecified, using default values
  1980     2001                     	org	8193
  1981     2001  3FFF               	dw	16383
  1982                           
  1983                           ;Config register IDLOC2 @ 0x2002
  1984                           ;	unspecified, using default values
  1985     2002                     	org	8194
  1986     2002  3FFF               	dw	16383
  1987                           
  1988                           ;Config register IDLOC3 @ 0x2003
  1989                           ;	unspecified, using default values
  1990     2003                     	org	8195
  1991     2003  3FFF               	dw	16383
  1992                           
  1993                           	psect	config
  1994                           
  1995                           ;Config register CONFIG1 @ 0x2007
  1996                           ;	Oscillator Selection bits
  1997                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1998                           ;	Watchdog Timer Enable bit
  1999                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2000                           ;	Power-up Timer Enable bit
  2001                           ;	PWRTE = OFF, PWRT disabled
  2002                           ;	RE3/MCLR pin function select bit
  2003                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2004                           ;	Code Protection bit
  2005                           ;	CP = OFF, Program memory code protection is disabled
  2006                           ;	Data Code Protection bit
  2007                           ;	CPD = OFF, Data memory code protection is disabled
  2008                           ;	Brown Out Reset Selection bits
  2009                           ;	BOREN = OFF, BOR disabled
  2010                           ;	Internal External Switchover bit
  2011                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2012                           ;	Fail-Safe Clock Monitor Enabled bit
  2013                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2014                           ;	Low Voltage Programming Enable bit
  2015                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2016                           ;	In-Circuit Debugger Mode bit
  2017                           ;	DEBUG = 0x1, unprogramme  2018     2007                     	org	8199
  2019     2007  20D4               	dw	8404
  2020                           
  2021                           ;Config register CONFIG2 @ 0x2008
  2022                           ;	Brown-out Reset Selection bit
  2023                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2024                           ;	Flash Program Memory Self Write Enable bits
  2025                           ;	WRT = OFF, Write protection off
  2026     2008                     	org	8200
  2027     2008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      69
    BANK1            80      5       5
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_2(CODE[27]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> POT@oracion(BANK0[40]), POT@CVPOT(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena@txt	PTR unsigned char  size(1) Largest target is 4
		 -> POT@CVPOT(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_POT
    _POT->_sprintf

Critical Paths under _main in BANK1

    _main->_setup

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 BANK1      3     3      0
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0    1841
                                             61 BANK0      4     4      0
                                _POT
                                _TXT
 ---------------------------------------------------------------------------------
 (3) _TXT                                                  2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _POT                                                 48    47      1    1796
                                             13 BANK0     48    47      1
                             _cadena
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1389
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _cadena                                               4     4      0     123
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup

 _isr (ROOT)
   _POT
     _cadena
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _TXT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       5       7        6.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 11 14:07:29 2023

                      pc 0002                       fsr 0004                      l100 02D3  
                    l111 02A4                      l108 01DF                      u640 02D9  
                    u641 02D8                      u657 02E1                      u667 01DB  
                    _POT 021A                      _TXT 02EB                      _isr 0110  
                    fsr0 0004                      indf 0000                     ?_POT 002D  
                   ?_TXT 0070                     l1201 0284                     l1211 028F  
                   l1203 0285                     l1221 029E                     l1213 0292  
                   l1205 0286                     l1223 02A1                     l1215 0295  
                   l1207 0289                     l1217 0298                     l1209 028C  
                   l1161 01AD                     l1219 029B                     l1171 01B4  
                   l1163 01AE                     l1181 01BF                     l1173 01B5  
                   l1165 01AF                     l1157 01A5                     l1245 02C9  
                   l1191 01C9                     l1183 01C0                     l1175 01B6  
                   l1167 01B0                     l1159 01A9                     l1247 02D9  
                   l1193 01CF                     l1185 01C1                     l1177 01BD  
                   l1169 01B3                     l1195 01D2                     l1187 01C5  
                   l1179 01BE                     l1189 01C8                     l1199 0280  
                   ?_isr 0070                     STR_1 027C                     STR_2 0261  
                   _BRGH 04C2                     _CREN 00C4                     _IOCB 0096  
                   i1l90 0153                     i1l91 0146                     i1l94 0154  
                   i1l87 012C                     i1l89 0139                     _SPEN 00C7  
                   _TXEN 04C5                     _TXIF 0064                     _SYNC 04C4  
                   _main 02C9                     btemp 007E                     start 0012  
                  ??_POT 002E                    ??_TXT 0070                    ??_isr 005D  
                  ?_main 0070                    _BRG16 0C3B                    _ANSEL 0188  
        __end_of___lwdiv 01A5                    i1l120 02C8                    i1l123 0250  
                  i1l116 02A9                    i1l132 0306                    i1l126 02EB  
                  i1l243 010F          __end_of___lwmod 021A                    i1l519 01A4  
                  i1l529 0219                    _RCREG 001A                    u40_20 01E6  
                  u40_21 01E5                    u33_20 0169                    u33_21 0168  
                  u41_25 01EA                    u42_20 01F8                    u50_20 00A0  
                  u42_21 01F7                    u50_21 009F                    _SPBRG 0099  
                  u34_25 016D                    u50_25 009C                    u35_20 017B  
                  u43_20 0202                    u51_20 00AB                    u35_21 017A  
                  u43_21 0201                    u51_21 00AA                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    u43_25 01FE  
                  _PORTE 0009                    u52_20 00B1                    u60_20 0123  
                  u52_21 00B0                    u60_21 0122                    u36_25 017C  
                  u44_25 0209                    u37_20 018C                    u45_20 0215  
                  u53_20 00FB                    u61_20 0130                    u37_21 018B  
                  u45_21 0214                    u53_21 00FA                    u61_21 012F  
                  u37_25 0188                    u46_20 02AF                    u54_20 010B  
                  u62_20 013D                    u46_21 02AE                    u54_21 010A  
                  u62_21 013C                    u38_25 0194                    u47_20 02C8  
                  u39_20 01A0                    u55_20 02F1                    u63_20 014A  
                  u47_21 02C7                    u39_21 019F                    u55_21 02F0  
                  u63_21 0149                    u48_20 002B                    u56_20 02F9  
                  u48_21 002A                    u56_21 02F8                    u49_20 007A  
                  u57_20 0304                    u49_21 0079                    u57_21 0303  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    u58_20 0114                    u58_21 0113  
                  u59_20 011D                    u59_21 011C                    u67_27 0223  
                  _TXREG 0019          __end_of_dpowers 0261                    _setup 01A5  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0110          __initialization 0015             __end_of_main 02EB  
                 ??_main 00A2                   ?_setup 0070                   _ANSELH 0189  
                 i1l1011 0161                   i1l1021 0177                   i1l1013 0163  
                 i1l1031 019A                   i1l1023 017B                   i1l1015 0169  
                 i1l1111 00B1                   i1l1103 0085                   i1l1025 018C  
                 i1l1017 016C                   i1l1033 01A0                   i1l1041 01E9  
                 i1l1121 00EE                   i1l1113 00B6                   i1l1027 0192  
                 i1l1019 0173                   i1l1051 0208                   i1l1043 01F0  
                 i1l1123 00F2                   i1l1115 00BA                   i1l1107 00A1  
                 i1l1061 02AF                   i1l1029 0193                   i1l1053 020F  
                 i1l1045 01F4                   i1l1037 01E0                   i1l1117 00BD  
                 i1l1109 00AB                   i1l1125 00FB                   i1l1141 02F9  
                 i1l1063 02B7                   i1l1047 01F8                   i1l1039 01E6  
                 i1l1055 0215                   i1l1119 00E9                   i1l1127 010B  
                 i1l1071 002B                   i1l1151 0239                   i1l1143 02FE  
                 i1l1135 02EB                   i1l1231 011D                   i1l1065 02BD  
                 i1l1049 0202                   i1l1081 0040                   i1l1073 0030  
                 i1l1153 024A                   i1l1145 0304                   i1l1137 02F1  
                 i1l1241 0153                   i1l1233 0123                   i1l1225 0110  
                 i1l1059 02A6                   i1l1091 0076                   i1l1075 0035  
                 i1l1067 0022                   i1l1147 021D                   i1l1139 02F3  
                 i1l1235 0130                   i1l1227 0114                   i1l1093 007A  
                 i1l1077 0037                   i1l1085 004A                   i1l1069 0025  
                 i1l1149 0228                   i1l1237 013D                   i1l1229 0119  
                 i1l1095 007E                   i1l1087 006A                   i1l1079 003C  
                 i1l1239 014A                   i1l1097 0083                   i1l1089 0072  
                 i1l1269 005C                   _OSCCON 008F                   _SPBRGH 009A  
                 _cadena 02A5         __end_of_initUART 02A5                ??___lwdiv 0074  
              ??___lwmod 007C                   saved_w 007E                ??_sprintf 0023  
__end_of__initialization 001B           __pcstackCOMMON 0070            __end_of_setup 01E0  
         _OPTION_REGbits 0081                  ??_setup 00A0               __pbssBANK0 0061  
             __pmaintext 02C9                  ?_cadena 0070               __pintentry 0004  
              POT@puerto 002D               __stringtab 0251                ?_initUART 0070  
                ___lwdiv 0161                  ___lwmod 01E0                  cadena@i 0071  
                __ptext1 01A5                  __ptext2 0280                  __ptext3 0110  
                __ptext4 02EB                  __ptext5 021A                  __ptext6 001F  
                __ptext7 01E0                  __ptext8 0161                  __ptext9 02A5  
                _dpowers 0257                  _sprintf 001F     end_of_initialization 001B  
             ??_initUART 00A0                _RCSTAbits 0018              POT@contador 005C  
              _PORTBbits 0006                _TXSTAbits 0098           __end_of_cadena 02C9  
    start_initialization 0015              __end_of_POT 0251              __end_of_TXT 0307  
            __end_of_isr 0161                 ??_cadena 0070                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0              sprintf@flag 0026  
            sprintf@prec 0027         ___lwdiv@dividend 0072                 POT@CVPOT 0058  
              cadena@txt 0073                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0251         ___lwdiv@quotient 0075                 ?_sprintf 0020  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
            TXT@caracter 0071               POT@oracion 0030               _ADCON0bits 001F  
            __stringbase 0256               _ADCON1bits 009F       __end_of__stringtab 0257  
             sprintf@val 0029          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               _contador 0063                 _initUART 0280                 _recibido 0061  
             _INTCONbits 000B                 intlevel1 0000                sprintf@ap 0028  
              sprintf@sp 002B         ___lwmod@dividend 007A                stringcode 0251  
               sprintf@c 002C                 sprintf@f 0020          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 0251                 stringtab 0251  
